apiVersion: v1
kind: Service
metadata:
  name: fint-core-explorer
  annotations: {service.beta.kubernetes.io/azure-load-balancer-internal: 'true'}
spec:
  selector:
    app: fint-core-explorer
  type: LoadBalancer
  ports:
    - {name: '8080', port: 8080}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fint-core-explorer
spec:
  selector:
    matchLabels:
      app: fint-core-explorer
  template:
    metadata:
      labels:
        app: fint-core-explorer
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "actuator/prometheus"
    spec:
      serviceAccountName: fint-core-explorer
      containers:
        - name: fint-core-explorer
          image: fintlabsacr.azurecr.io/fint-core-explorer:latest
          env:
            - { name: kubernetes.client, value: in-cluster }
            - { name: kubernetes.namespace, value: default }
            - { name: kubernetes.connect-timeout, value: "15000" }
            - { name: kubernetes.read-timeout, value: "15000" }
            - { name: kubernetes.initial-delay, value: "10000" }
            - { name: kubernetes.fixed-delay, value: "300000" }
            - { name: management.endpoints.web.exposure.include, value: "info, health, metrics, prometheus" }
            - { name: TZ, value: Europe/Oslo }
          resources:
            limits:
              memory: "4000Mi"
              cpu: "500m"
            requests:
              memory: "3000Mi"
              cpu: "250m"
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 15
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 30
            timeoutSeconds: 5
